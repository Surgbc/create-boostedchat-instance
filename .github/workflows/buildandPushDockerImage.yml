name: Docker Build and Push

on:
  push:
    branches:
    - master
jobs:
    setup:
      name: "Set up"
      if: startsWith(github.event.head_commit.message, 'build and deploy')
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Get VM name from commit message
          id: extract_branch_name
          run: |
            branch_message=$(echo "${{ github.event.head_commit.message }}" | grep -oP '(?<=build and deploy )\S+')
            echo "::set-output name=branch::$branch_message"
            echo "branch=$branch_message"  >> $GITHUB_ENV
            echo "found branch: $branch_message"
  
        - name: Yaml to Json
          env:
            branch: ${{ steps.extract_branch_name.outputs.branch }}
          run: |
            /bin/bash matrix.sh
        - name: Set matrix data
          id: set-matrix
          run: |
            cat ./config.json
            echo "matrix=$(jq -c . < ./config.json)" >> $GITHUB_OUTPUT
            
    loop:
      runs-on: ubuntu-latest
      needs: setup
      strategy:
        matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
      steps:
        - name: Set Docker secrets based on branch
          if: github.ref == 'refs/heads/dev'
          run: |
            echo "DOCKER_USERNAME=${{ secrets.DEV_DOCKER_USERNAME }}" >> $GITHUB_ENV
            echo "DOCKER_PASSWORD=${{ secrets.DEV_DOCKER_PASSWORD }}" >> $GITHUB_ENV
        
        - name: Set Docker secrets based on branch
          if: github.ref == 'refs/heads/main'
          run: |
            echo "DOCKER_USERNAME=${{ secrets.MAIN_DOCKER_USERNAME }}" >> $GITHUB_ENV
            echo "DOCKER_PASSWORD=${{ secrets.MAIN_DOCKER_PASSWORD }}" >> $GITHUB_ENV
  
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ env.DOCKER_USERNAME }}
            password: ${{ env.DOCKER_PASSWORD }}
  
        - uses: actions/checkout@v3
          with:
            ref: ${{ matrix.service }}-${{ matrix.branch }} 
        - name: Build and push Docker image
          run: |
            docker build -t ${{ matrix.image_name }} .
            docker push y${{ matrix.image_name }}
  