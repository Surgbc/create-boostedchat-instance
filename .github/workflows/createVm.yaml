name: Create VM

on:
  repository_dispatch:
    types: [create-vm]
jobs:
  create_vm:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: |
          sudo apt-get install ssmtp -y
          echo "${{secrets.ENV_FILE_BASE64}}" | base64 -d  > ./.env.example
          cat .env.example |grep "EMAIL_USER=" > tmpEnv
          cat .env.example |grep "EMAIL_PASSWORD" >> tmpEnv
          cat .env.example |grep "INSTANCES_EMAIL" >> tmpEnv
          source <(sed 's/^/export /' tmpEnv | grep ) 
          cat tmpEnv
          sed -i "s/^root=.*/root=$EMAIL_USER/" setupscripts/ssmtp.conf
          sed -i "s/^AuthUser=.*/AuthUser=$EMAIL_USER/" setupscripts/ssmtp.conf
          sed -i "s/^AuthPass=.*/AuthPass=\"$EMAIL_PASSWORD\"/" setupscripts/ssmtp.conf
          sudo cp setupscripts/ssmtp.conf /etc/ssmtp/ssmtp.conf
          cat /etc/ssmtp/ssmtp.conf
          /bin/bash setupscripts/sendEmail.sh "Creating ${{ github.event.client_payload.vm_name }}" "Step 1 of ${{ github.workflow }}"
      - name: Login to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0

      - name: Create Vm
        run: |
          gcloud compute instances create ${{ github.event.client_payload.vm_name }} \
            --machine-type=n2-standard-2 \
            --zone=us-central1-a \
            --image=ubuntu-2204-jammy-v20240207a \
            --image-project=ubuntu-os-cloud \
            --boot-disk-size=25GB \
            --boot-disk-type=pd-standard \
            --tags=http-server,https-server
      - name: Get VM IP
        id: get_vm_ip
        run: |
              VM_IP=$(gcloud compute instances describe "${{ github.event.client_payload.vm_name }}" \
                          --zone=us-central1-a \
                          --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
              # echo "::set-output name=vm_ip::$VM_IP"
              echo "vm_ip=$VM_IP" >> $GITHUB_OUTPUT
      
      - name: Create DNS Record
        env:
          IP: ${{ steps.get_vm_ip.outputs.vm_ip }}
          SUBDOMAIN: ${{ github.event.client_payload.vm_name }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          /bin/bash ./setupscripts/createSubdomains.sh ## requires checkout
      -  run: |
          cd  setupscripts/
          chmod +x copy_dev_docker_file.sh
          ./copy_dev_docker_file.sh 
          cd ..
          cp ./setupscripts/setupvm.sh ./setupvm.sh
      - name: Copy privateKey to VM
        run: |
          echo "${{secrets.SSH_DEPLOY_KEY}}" > ./privateKey
          gcloud compute scp ./privateKey root@${{ github.event.client_payload.vm_name }}:~/privateKey --zone=us-central1-a
          ## install smtp
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command="sudo apt-get install ssmtp -y"
          ## copy sendmail files
          gcloud compute scp ./setupscripts/ssmtp.conf root@${{ github.event.client_payload.vm_name }}:/etc/ssmtp/ssmtp.conf --zone=us-central1-a
          gcloud compute scp ./setupscripts/sendEmail.sh root@${{ github.event.client_payload.vm_name }}:~/sendEmail.sh --zone=us-central1-a
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command="chmod +x ~/sendEmail.sh"
      - name: Copy env template file
        run: |
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command "mkdir -p /etc/boostedchat/ && exit"
          echo "${{secrets.ENV_FILE_BASE64}}" | base64 -d  > ./.env.example
          echo "" >> ./.env.example
          echo "DJANGO_SUPERUSER_PASSWORD=${{ github.event.client_payload.password }}" >> ./.env.example
          echo "DJANGO_SUPERUSER_EMAIL=${{ github.event.client_payload.email }}" >> ./.env.example
          gcloud compute scp ./.env.example root@${{ github.event.client_payload.vm_name }}:/etc/boostedchat/.env --zone=us-central1-a
      - name: Configure Git to Use Private Key
        run: |
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command="mkdir -p ~/.ssh && cp ~/privateKey ~/.ssh/id_rsa_git && chmod 600 ~/.ssh/id_rsa_git"
      - name: Copy SSH script to VM
        run: |
          gcloud compute scp ./setupvm.sh root@${{ github.event.client_payload.vm_name }}:~/install.sh --zone=us-central1-a
      - name: Set execute permission on the script
        run: |
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command="chmod +x ~/install.sh"
      - name: Run the script on the VM
        run: |
          if [[ "${{ github.event.client_payload.branch }}" == "dev" ]]; then
            branch="dev"
          else
            branch=""
          fi
          gcloud compute ssh root@${{ github.event.client_payload.vm_name }} --zone=us-central1-a --command="~/install.sh $branch"
          /bin/bash setupscripts/sendEmail.sh "Creating ${{ github.event.client_payload.vm_name }}" "Finished ${{ github.workflow }}. Running script in server"