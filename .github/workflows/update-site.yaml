name: Triggered to Update Servers b-site
# log in to all servers
# git pull on all of them
# copy script to this other script

on:
  repository_dispatch:
    types: [update-site]
env:
  dev_vm_name: boostedchat-devs
jobs:
  get_instances:
    runs-on: ubuntu-latest
    if: ${{github.event.client_payload.branch == 'dev' }}
    permissions:
          contents: 'read'
          id-token: 'write'
    outputs:
      vms: ${{ steps.list_instances.outputs.instances }}
    steps:
      - name: Login to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
      - name: List vms
        id: list_instances
        run: |
          gcloud compute instances list --format="value(name)" > instances.txt
          instances=$(cat instances.txt | base64 - w 0)
          echo "instances=$instances" >> $GITHUB_OUTPUT
          # it will be less resource intensive to run it from here
  update_existing:
    runs-on: ubuntu-latest
    needs:
      - get_instances
    strategy:
      matrix: ${{ fromJson(needs.get_instances.outputs.vms) }}
    steps:
      - run: |
          echo ${{ github.event.client_payload.branch }}
      - name: Trigger VM Update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: "${{ github.repository }}"
          event-type: update-vm
          client-payload: '{ 
                "vm_name":"${{ github.event.client_payload.vm_name }}"
            }'

  