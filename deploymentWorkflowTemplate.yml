name: Push to Holding Repo

# Define global variables
env:
  SERVICE_NAME: "client" # change this for each service
  REPO_NAME: "create-boostedchat-instance"

on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
    build-linux-packages:
      name: "Push to BoostedChat-Site"
      runs-on: "ubuntu-latest"
      steps: 
        - name: Extract branch from tag
          id: extract-branch
          run: |
            TAG=${{ github.ref }}
            if [[ $TAG =~ ^refs/tags/v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              BRANCH=main
            elif [[ $TAG =~ ^refs/tags/v([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              BRANCH=dev
            else
              echo "Tag format is not recognized. Exiting..."
              exit 1
            fi
            echo "Branch extracted from tag: $BRANCH"
            echo "LOCAL_BRANCH=$BRANCH" >> $GITHUB_ENV
            echo "BRANCH=${{ env.SERVICE_NAME }}-$BRANCH" >> $GITHUB_ENV
        - uses: actions/checkout@v3
          with:
            ref: ${{ env.LOCAL_BRANCH }}
        - name: Check if destination branch exists
          id: check-branch
          run: |
            mkdir -p /tmp/ssh
            ssh-keyscan github.com >> /tmp/ssh/known_hosts
            echo "${{ secrets.HOLDING_REPO }}" > /tmp/ssh/id_rsa
            chmod 600 /tmp/ssh/id_rsa
            dir=$(pwd)
            cd /tmp
            # GIT_SSH_COMMAND="ssh -i /tmp/ssh/id_rsa -o UserKnownHostsFile=/tmp/ssh/known_hosts" git clone --branch ${{ env.BRANCH }} git@github.com:${{ github.repository_owner }}/${{ env.REPO_NAME }}.git repo
            GIT_SSH_COMMAND="ssh -i /tmp/ssh/id_rsa -o UserKnownHostsFile=/tmp/ssh/known_hosts" git clone git@github.com:${{ github.repository_owner }}/${{ env.REPO_NAME }}.git repo
            cd repo 
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git config user.name "GitHub Actions"
            git checkout -b ${{ env.BRANCH }}
            GIT_SSH_COMMAND="ssh -i /tmp/ssh/id_rsa -o UserKnownHostsFile=/tmp/ssh/known_hosts" git push -f git@github.com:${{ github.repository_owner }}/${{ env.REPO_NAME }}.git ${{ env.BRANCH }}
            #cd -
            #pwd
            #ls -lha
            ## Replace cpina with commands below
            cd $dir
            rm -rf .git
            cp -r /tmp/repo/.git ./
            ls -lha
            commit_url="https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/commit/${{ github.sha }}"
            git add . && git commit -m "Update from $commit_url"
            GIT_SSH_COMMAND="ssh -i /tmp/ssh/id_rsa -o UserKnownHostsFile=/tmp/ssh/known_hosts" git push git@github.com:${{ github.repository_owner }}/${{ env.REPO_NAME }}.git ${{ env.BRANCH }}
            
        # - name: Push back to repository
        #   uses: cpina/github-action-push-to-another-repository@main
        #   env:
        #     SSH_DEPLOY_KEY: ${{ secrets.HOLDING_REPO }}
        #   with:
        #     source-directory: ./
        #     destination-github-username: ${{ github.repository_owner }}
        #     destination-repository-name: ${{ env.REPO_NAME }}
        #     user-email: "github-actions[bot]@users.noreply.github.com"
        #     target-branch: ${{ env.BRANCH }}