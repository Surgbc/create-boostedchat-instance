name: Push to BoostedChat-Site

# Define global variables
env:
  REPO_NAME: "boostedchat-site"

# on:
#   push:
#     tags:
#       - "v*"
on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    # branches:
    #   - master
    paths: # on changes to scripts
      - 'setupscripts/**'
permissions:
  contents: write

# jobs
jobs:
  build-linux-packages:
    name: "Push to BoostedChat-Site"
    runs-on: "ubuntu-latest"
    steps: 
      - uses: actions/checkout@v4
      ## clone it first,,,, test with a differnt repo...
      - name: Clone boostedchat-site
        run: | # use the dev branch
            git clone https://${{ secrets.REPO_ACCESS_TOKEN }}@github.com/${{ github.repository_owner}}/$REPO_NAME.git -b dev
            cd  setupscripts/
            chmod +x copy_dev_docker_file.sh
            ./copy_dev_docker_file.sh 
            cd ..
            cp ./setupscripts/setupvm.sh ./$REPO_NAME/install.sh
      - name: Push back to repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
            # DEPLOY_TOKEN: ${{ secrets[format('DEPLOY_TOKEN_{0}', github.repository_owner)] }}
            API_TOKEN_GITHUB: ${{ secrets.REPO_ACCESS_TOKEN }}
            # SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
            # SOURCE_DIR: "./$REPO_NAME"
        with:
            source-directory: ${{ env.REPO_NAME }}
            destination-github-username: ${{ github.repository_owner }}
            destination-repository-name: ${{ env.REPO_NAME }}
            user-email: "github-actions[bot]@users.noreply.github.com"
            target-branch: dev
      - uses: gliech/create-github-secret-action@v1
        with:
          location: "${{ github.repository_owner }}/boostedchat-site"
          name: REPO_ACCESS_TOKEN
          value: ${{ secrets.REPO_ACCESS_TOKEN }}
          org_visibility: private
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}